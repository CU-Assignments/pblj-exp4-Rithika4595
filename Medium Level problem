import java.util.*;

class Card {
    String symbol;
    String value;

    public Card(String symbol, String value) {
        this.symbol = symbol;
        this.value = value;
    }

    @Override
    public String toString() {
        return value + " of " + symbol;
    }
}

public class CardCollection {
    private static Map<String, List<Card>> cardMap = new HashMap<>();

    public static void addCard(String symbol, String value) {
        cardMap.computeIfAbsent(symbol, k -> new ArrayList<>()).add(new Card(symbol, value));
        System.out.println("Card added successfully.");
    }

    public static void getCardsBySymbol(String symbol) {
        List<Card> cards = cardMap.get(symbol);
        if (cards == null || cards.isEmpty()) {
            System.out.println("No cards found for symbol: " + symbol);
        } else {
            cards.forEach(System.out::println);
        }
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        while (true) {
            System.out.println("\n1. Add Card 2. Find Cards by Symbol 3. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline

            switch (choice) {
                case 1 -> {
                    System.out.print("Enter Card Symbol: ");
                    String symbol = scanner.nextLine();
                    System.out.print("Enter Card Value: ");
                    String value = scanner.nextLine();
                    addCard(symbol, value);
                }
                case 2 -> {
                    System.out.print("Enter Symbol to Find: ");
                    getCardsBySymbol(scanner.nextLine());
                }
                case 3 -> {
                    System.out.println("Exiting...");
                    return;
                }
                default -> System.out.println("Invalid option. Try again.");
            }
        }
    }
}
